(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{379:function(t,e,a){"use strict";a.r(e);var r=a(42),n=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-前言"}},[t._v("#")]),t._v(" 1. 前言")]),t._v(" "),a("p",[t._v("原文："),a("a",{attrs:{href:"https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("《2W+Star快速学习正则表达式的文章》"),a("OutboundLink")],1),a("br"),t._v("\n参考："),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式-MDN"),a("OutboundLink")],1),a("br"),t._v("\n正则在线工具："),a("a",{attrs:{href:"https://regex101.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://regex101.com"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"_2-什么是正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是正则表达式"}},[t._v("#")]),t._v(" 2. 什么是正则表达式？")]),t._v(" "),a("p",[t._v("来自wiki的定义：")]),t._v(" "),a("blockquote",[a("p",[t._v("正则表达式（英语：Regular Expression，常简写为regex、regexp或RE）是一组由字母和符号组成的特殊文本, 通常被用来检索、替换那些符合某个模式的文本。")])]),t._v(" "),a("p",[t._v("通常我们用来从一个基础字符串中根据一定的"),a("strong",[t._v("匹配模式")]),t._v("替换文本中的字符串、验证表单、提取字符串等等，这里的匹配模式就是正则表达式的内容。")]),t._v(" "),a("h2",{attrs:{id:"_3-创建正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建正则表达式"}},[t._v("#")]),t._v(" 3. 创建正则表达式")]),t._v(" "),a("ul",[a("li",[t._v("字面量形式。正则表达式字面量其由包含在"),a("strong",[t._v("斜杠"),a("code",[t._v("/")]),t._v("之间")]),t._v("的模式组成，如："),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("abc")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("构造函数形式。调用内置对象"),a("code",[t._v("RegExp")]),t._v("的构造函数来创建，如："),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("二者的区别：\n"),a("ul",[a("li",[t._v("字面量的形式为正则表达式提供了脚本加载后的编译，所以在字面量的方式定义的正则表达式模式保持不变时，能带来更好的性能。")]),t._v(" "),a("li",[t._v("使用构造函数的方式用于在定义的正则表达式模式将会改变或者不知道模式的情况。")])])])]),t._v(" "),a("h2",{attrs:{id:"_4-匹配规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-匹配规则"}},[t._v("#")]),t._v(" 4. 匹配规则")]),t._v(" "),a("h3",{attrs:{id:"_1-基本-精确-匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本-精确-匹配"}},[t._v("#")]),t._v(" 1. 基本（精确）匹配")]),t._v(" "),a("p",[t._v("正则表达式由一些字母和数字组合而成，表示在字符串中执行查找时的格式。例如，想要在如下字符串中查找"),a("code",[t._v("the")]),t._v("，直接定义"),a("code",[t._v("/the/")]),t._v("即可进行精确的查找，"),a("strong",[t._v("正则是大小写敏感的")]),t._v("，所以只会匹配"),a("code",[t._v("the")]),t._v("而不会匹配"),a("code",[t._v("The")]),t._v(":\n"),a("img-show",{attrs:{"img-info":{src:"https://i.loli.net/2019/11/05/npDKYu5i9aAqd6H.png",description:"基本匹配"}}})],1),t._v(" "),a("h3",{attrs:{id:"_2-特殊字符-元字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-特殊字符-元字符"}},[t._v("#")]),t._v(" 2. 特殊字符-元字符")]),t._v(" "),a("blockquote",[a("p",[t._v("元字符就是指那些在正则表达式中具有特殊意义的专用字符，可以用来规定其前导字符（即位于元字符前面的字符）在目标对象中的出现模式。")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("元字符")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("举例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("匹配除换行符之外的任何"),a("strong",[t._v("单个字符")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("/.n/g")]),t._v(" 表示匹配任意一个字符后跟着的是"),a("code",[t._v("n")]),t._v('的字符。所以会匹配 "nay, an apple is on the tree" 中的an和on，但是不会匹配nay，'),a("a",{attrs:{href:"https://regex101.com/r/xc9GkU/242",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线示例"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("{n}")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("n为正整数，匹配n个大括号前的字符")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("/a{2}/g")]),t._v(" 不会匹配“candy”中的'a',但是会匹配“caandy”中所有的 a，以及“caaandy”中的前两个'a'，"),a("a",{attrs:{href:"https://regex101.com/r/xc9GkU/249",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线示例"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("{n,}")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("n为正整数，匹配至少n个大括号之前的字符")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("/a{2,}/g")]),t._v(" 会匹配“caaandy”中的所有'a'，"),a("a",{attrs:{href:"https://regex101.com/r/xc9GkU/250",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线示例"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("{n,m}")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("匹配num个大括号之前的字符 (n <= num <= m).")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("*")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("重复匹配，匹配紧挨着*号之前的字符/字符集0次或多次。在全局匹配（标志为"),a("code",[t._v("g")]),t._v("）的情况下，相当于匹配所有的该字符")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("/0*/g")]),t._v(' 会匹配 "ab0123000c" 中的0，'),a("a",{attrs:{href:"https://regex101.com/r/xc9GkU/245",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线示例"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("+")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("重复匹配，匹配>=1个重复的+号前的字符.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("标记?之前的字符为可选.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("|")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("或运算符,匹配符号前或后的字符.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("\\")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("转义字符,用于匹配一些保留的字符 [ ] ( ) { } . * + ? ^ $ \\")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("^")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("从开始行开始匹配.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("$")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("从末端开始匹配.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("(xyz)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符集, 匹配与 xyz 完全相等的字符串.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("[ ]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符集，匹配方括号内的任意字符。"),a("strong",[t._v("字符集中的内容与顺序无关")]),t._v("。可以使用破折号"),a("code",[t._v("-")]),t._v("来指定一个字符范围，可以是多个范围相连")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("/[abcd123]/g")]),t._v("和"),a("code",[t._v("/[a-d1-3]/g")]),t._v('是一样的，都匹配"brisket43"中的b和3，'),a("a",{attrs:{href:"https://regex101.com/r/xc9GkU/243",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线示例"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("[^ ]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("反向字符集，匹配任何没有包含在方括号中的字符。同样可以使用字符集的范围指定方式")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("/[^a-d1-3]/g")]),t._v('可以匹配"brisket43"中除了b和3之外的其他所有字符，'),a("a",{attrs:{href:"https://regex101.com/r/xc9GkU/244",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线示例"),a("OutboundLink")],1)])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);